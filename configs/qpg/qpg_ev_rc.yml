type:                        QRL                   # choose a type: RL, GA, Hypernetwork, ...
alg:                         QPG                  # name of the algorithm
use_ray_alg:                 False                 # use custom algorithm or ray framework
seed:                        42                   # seed for ray alogorithms/tensorflow/pytorch for reproduceabel results

mode:                        training             # select the mode you want to use: 'custom', 'training'
trainer:                     default
checkpoint_at_end:           False
checkpoint_freq:             200
ray_local_mode:              False                # set local_mode of ray to True for debugging
load_path:                   some/path/weights    # provide a model weight path if you want to do continue from stopped training

ray_logging_path:            logs/qpg/ev/12_20/5_50_15       # logging directory
total_num_cpus:              42                   # total number of cpus
total_num_gpus:              0                    # total number of gpus
ray_num_trial_samples:       1                    # number of hyperparameter combinations (trials) to run (works differently for grid_search)
training_iterations:         50                   # number of training iterations


env_type:                     gym_game
env:                          EV
env_config:
  max_capacity: 5
  max_power: 50
  maximum_timesteps: 24
  number_of_evs: 20
  action_space_type:          discrete
  path:                       /home/users/coelho/quantum-computing/QRL

algorithm_config:
  reuse_actors:               True
  num_gpus:                   0                   # number of gpus for each trial
  num_rollout_workers:        1                  # number of worker for each trial. By ray default, every worker needs one cpu
  num_envs_per_worker:        1                   # number of game enviroments for each worker
  num_gpus_per_worker:        0                   # number of worker for each trial.
  num_cpus_per_worker:        0.2                # number of worker for each trial.
  constant_seed:              False 
  framework:                  torch
  ###########################################################################
  lr:                         0.001
    # - grid_search
    # - float
    # - [0.025, 0.01, 0.005] 
  # weight_decay: 
  #   - grid_search
  #   - float
  #   - [0, 1.0e-4, 1.0e-5]
  lr_output_scaling:          0.1
    # - grid_search
    # - float
    # - [0.1, 0.01]  
  num_layers:                 5           
    # - grid_search   
    # - int 
    # - [3, 6]
  # blocks: 
  #   - choice 
  #   - string
  #   - [[[[0, 1], [2, 3]], [[0, 1], [2], [3]]]]
  ###########################################################################
  mode:                       quantum # classical, quantum, hybrid
    # - grid_search
    # - string
    # - [classical, quantum]
  interface:                  torch
  diff_method:                adjoint                             
  backend_name:               lightning.qubit
  custom_optimizer:           Adam   
  ###########################################################################
  vqc_type:                   [vqc_generator, 4] #qcnn_circuit_pendulum # triple_circuit
  use_hadamard:               #True
  block_sequence:             enc_var_ent
  encoding_type:              angle_encoding_RX # layerwise_arctan_sigmoid #angular_classical
  graph_encoding_type:        None
    # - grid_search
    # - string
    # - [eqc, neqc]
  use_input_scaling:          True
  num_scaling_params:         1
  entangling_type:            chain
  entangling_gate:            CNOT
  variational_type:           RZ_RY
  num_variational_params:     2
  measurement_type_actor:     exp             # type of measurement (check the python files for examples) (exp for discrete) exp_@_exp+exp
  use_output_scaling_actor:   True
  init_output_scaling_actor:  [1.0]
  postprocessing_actor:       1
  noise:
    coherent:                 [False, 0.]
    depolarizing:             [False, 0.001]
  ###########################################################################
  init_params:                3.14
  init_params_mode:           plus-zero-uniform    # plus-zero-uniform #, plus-plus-normal. plus-zero-normal
  layerwise_training:         False
  gradient_clipping:          False
  use_classical_layer:        False
  layer_size:                 [16, 16]
  activation_function:        relu      
  weight_logging_interval:    5000
  weight_plotting:            False
  ###########################################################################
  # More ray params
  explore:                    True
    # - grid_search
    # - string
    # - [False, True]

  