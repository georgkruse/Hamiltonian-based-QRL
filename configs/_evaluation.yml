evaluation:
  set_seed:                       True 
  seed:                           69
  ###########################################################################
  plotting:
    mode:                         custom
    path:                         logs/qppo/uc/02_08/2024-02-09--17-32-20_QRL_QPPO
  ###########################################################################
  landscape_plotting:
    mode:                         qrl
    plot_name:                    qnn 4 qubits params=2 layer=1 
    plot_title:                   qaoa 4 qubits params=2 layer=1 
    qrl_config_path:              logs/qpg/uc/02_05/2024-02-05--12-06-29_QRL_QPG/
    plot_path:                    logs/qpg/uc/02_05/2024-02-05--12-06-29_QRL_QPG/ #logs/UC/dynamic/2024-02-07--14-27-34/
    center_params_path:           logs/qpg/uc/02_05/2024-02-05--12-06-29_QRL_QPG/QRL_PG_UC_demo_9cb93_00000_0_graph_encoding_type=eqc_2024-02-05_12-06-29/checkpoint_001000
                          # e.g. qrl: 'logs/qpg/uc/01_15/2024-01-17--11-39-09_QRL_QPG/QRL_PG_UC_demo_a552e_00000_0_graph_encoding_type=eqc,num_layers=3_2024-01-17_11-39-09/checkpoint_001000'
                          # e.g. qnn, qaoa, vqe: 'logs/comp/dynamic_5/2024-01-22--12-04-12/params_qnn_qubits_5_layer_5.csv'
    center_params:                trained_model         # can either be 0, trained_model
    evaluation_steps:             10                    # only required for qnn and qrl 
    vqc_type:                     qaoa                  # NOT FUNCTION YET! TODO: Implement Custom Circuit qaoa, vqe, qrl, custom_circuit
    num_layers:                   3                     # number of layers
    num_params:                   10                    # number of parameters per layers
    num_qubits:                   4                     # number of qubits
    num_div:                      10                    # Number of divisions to search (granularity of the grid / number of data points)
    scalor_1:                     1.0                   # set range for grid
    scalor_2:                     1.0                   # if grid is 2-dimensional, different scalors can be use e.g. for gamma and beta
    metric:                       accuracy              # z-axis for loss landscape for qrl [reward, accuracy], hard coded for qnn, vqe, qaoa
    mark_optimal:                 [True, 10]            # mark points which have same value as second list entry
    save_to_json:                 True                  # save losslandscape datapoints to json
  ###########################################################################
  algorithm_benchmarking:
    alg_to_train:                 [vqe, qaoa]
    alg_to_evaluate:              [vqe, qaoa]
    qrl_path:                     #logs/qpg/uc/02_09/2024-02-08--12-11-08_QRL_QPG/QRL_PG_UC_c280e_00000_0_graph_encoding_type=eqc,/checkpoint_001000
    qaoa_path:                    #logs/UC/dynamic_10/2024-02-09--13-51-03/params_qaoa_qubits_10_layer_3_timestep_0.csv
    vqe_path:                     #logs/UC/dynamic_10/2024-02-09--13-51-03/params_vqe_qubits_10_layer_3_timestep_0.csv
    optimizer_steps:              50
    evaluation_steps:             10
    num_qubits:                   10
    layer:
      layer_vqe:                  3
      layer_qaoa:                 3
      layer_qnn:                  3
    initialization:
      init_vqe:                   0.5
      init_qaoa:                  0.1
      init_qnn:                   0.1
    lr:
      lr_vqe:                     0.1
      lr_qaoa:                    0.01
      lr_qnn:                     0.1
    params_vqe:                   2
    params_qnn:                   10
    plotting:
      plot_vqe_probs:             True
      plot_qaoa_probs:            True
      plot_qnn_probs:             True                  # TODO
###########################################################################
  variance_calculation:   
    qubits:                       [2, 4, 6, 8, 10, 12, 14, 16]
    evaluations:                  100
    logging_path:                 logs/variance
    measurement_type_actor:       exp0
    calculate_vars:               False
    plot_vars:                    True
    save_to_json:                 True
    fig_name:                     variance calculation 
    path:                         /home/users/kruse/quantum-computing/QRL/logs/variance/2024-02-08--17-14-01_variances
    plot_keys:
      # - var_all_gradients
      - var_expecation
      # - var_weights_L
      # - var_input_scaling_L
 


  

  